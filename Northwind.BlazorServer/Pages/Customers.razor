@using Microsoft.EntityFrameworkCore
@*ToListAsync extension method*@
@page "/customers/{country?}"
@inject NorthwindContext _db

<h3>Customers @(string.IsNullOrWhiteSpace(Country) ? "Worldwide" : $"in {Country}") </h3>

@if (_customers is null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>Company Name</th>
            <th>Address</th>
            <th>Phone</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (Customer c in _customers)
        {
            <tr>
                <td>@c.CustomerId</td>
                <td>@c.CompanyName</td>
                <td>@c.Address</td>
                <td>@c.Phone</td>
                <td>
                    <a class="btn btn-info" href="editcustomer/@c.CustomerId">
                        <i class="oi oi-pencil"></i>
                    </a>
                    <a class="btn btn-danger" href="deletecustomer/@c.CustomerId">
                        <i class="oi oi-trash"></i>
                    </a>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    [Parameter] public string? Country { get; set; }

    private IEnumerable<Customer>? _customers;

    protected override async Task OnParametersSetAsync()
    {
        if (string.IsNullOrWhiteSpace(Country))
        {
            _customers = await _db.Customers.ToListAsync();
            return;
        }

        _customers = await _db.Customers.Where(c => c.Country == Country).ToListAsync();
    }

}